(function(){var t={504:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:true});const u=n(3);const o=n(652);const s="!";const r={returnIndex:false};const arrify=t=>Array.isArray(t)?t:[t];const createPattern=(t,e)=>{if(typeof t==="function"){return t}if(typeof t==="string"){const n=u(t,e);return e=>t===e||n(e)}if(t instanceof RegExp){return e=>t.test(e)}return t=>false};const matchPatterns=(t,e,n,u)=>{const s=Array.isArray(n);const r=s?n[0]:n;if(!s&&typeof r!=="string"){throw new TypeError("anymatch: second argument must be a string: got "+Object.prototype.toString.call(r))}const a=o(r);for(let t=0;t<e.length;t++){const n=e[t];if(n(a)){return u?-1:false}}const i=s&&[a].concat(n.slice(1));for(let e=0;e<t.length;e++){const n=t[e];if(s?n(...i):n(a)){return u?e:true}}return u?-1:false};const anymatch=(t,e,n=r)=>{if(t==null){throw new TypeError("anymatch: specify first argument")}const o=typeof n==="boolean"?{returnIndex:n}:n;const a=o.returnIndex||false;const i=arrify(t);const c=i.filter((t=>typeof t==="string"&&t.charAt(0)===s)).map((t=>t.slice(1))).map((t=>u(t,o)));const p=i.filter((t=>typeof t!=="string"||typeof t==="string"&&t.charAt(0)!==s)).map((t=>createPattern(t,o)));if(e==null){return(t,e=false)=>{const n=typeof e==="boolean"?e:false;return matchPatterns(p,c,t,n)}}return matchPatterns(p,c,e,a)};anymatch.default=anymatch;t.exports=anymatch},652:function(t){
/*!
 * normalize-path <https://github.com/jonschlinkert/normalize-path>
 *
 * Copyright (c) 2014-2018, Jon Schlinkert.
 * Released under the MIT License.
 */
t.exports=function(t,e){if(typeof t!=="string"){throw new TypeError("expected path to be a string")}if(t==="\\"||t==="/")return"/";var n=t.length;if(n<=1)return t;var u="";if(n>4&&t[3]==="\\"){var o=t[2];if((o==="?"||o===".")&&t.slice(0,2)==="\\\\"){t=t.slice(2);u="//"}}var s=t.split(/[/\\]+/);if(e!==false&&s[s.length-1]===""){s.pop()}return u+s.join("/")}},3:function(t,e,n){"use strict";t.exports=n(881)},753:function(t,e,n){"use strict";const u=n(17);const o="\\\\/";const s=`[^${o}]`;const r="\\.";const a="\\+";const i="\\?";const c="\\/";const p="(?=.)";const l="[^/]";const f=`(?:${c}|$)`;const A=`(?:^|${c})`;const _=`${r}{1,2}${f}`;const R=`(?!${r})`;const h=`(?!${A}${_})`;const E=`(?!${r}{0,1}${f})`;const g=`(?!${_})`;const y=`[^.${c}]`;const b=`${l}*?`;const x={DOT_LITERAL:r,PLUS_LITERAL:a,QMARK_LITERAL:i,SLASH_LITERAL:c,ONE_CHAR:p,QMARK:l,END_ANCHOR:f,DOTS_SLASH:_,NO_DOT:R,NO_DOTS:h,NO_DOT_SLASH:E,NO_DOTS_SLASH:g,QMARK_NO_DOT:y,STAR:b,START_ANCHOR:A};const C={...x,SLASH_LITERAL:`[${o}]`,QMARK:s,STAR:`${s}*?`,DOTS_SLASH:`${r}{1,2}(?:[${o}]|$)`,NO_DOT:`(?!${r})`,NO_DOTS:`(?!(?:^|[${o}])${r}{1,2}(?:[${o}]|$))`,NO_DOT_SLASH:`(?!${r}{0,1}(?:[${o}]|$))`,NO_DOTS_SLASH:`(?!${r}{1,2}(?:[${o}]|$))`,QMARK_NO_DOT:`[^.${o}]`,START_ANCHOR:`(?:^|[${o}])`,END_ANCHOR:`(?:[${o}]|$)`};const $={alnum:"a-zA-Z0-9",alpha:"a-zA-Z",ascii:"\\x00-\\x7F",blank:" \\t",cntrl:"\\x00-\\x1F\\x7F",digit:"0-9",graph:"\\x21-\\x7E",lower:"a-z",print:"\\x20-\\x7E ",punct:"\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~",space:" \\t\\r\\n\\v\\f",upper:"A-Z",word:"A-Za-z0-9_",xdigit:"A-Fa-f0-9"};t.exports={MAX_LENGTH:1024*64,POSIX_REGEX_SOURCE:$,REGEX_BACKSLASH:/\\(?![*+?^${}(|)[\]])/g,REGEX_NON_SPECIAL_CHARS:/^[^@![\].,$*+?^{}()|\\/]+/,REGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\]]/,REGEX_SPECIAL_CHARS_BACKREF:/(\\?)((\W)(\3*))/g,REGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\]])/g,REGEX_REMOVE_BACKSLASH:/(?:\[.*?[^\\]\]|\\(?=.))/g,REPLACEMENTS:{"***":"*","**/**":"**","**/**/**":"**"},CHAR_0:48,CHAR_9:57,CHAR_UPPERCASE_A:65,CHAR_LOWERCASE_A:97,CHAR_UPPERCASE_Z:90,CHAR_LOWERCASE_Z:122,CHAR_LEFT_PARENTHESES:40,CHAR_RIGHT_PARENTHESES:41,CHAR_ASTERISK:42,CHAR_AMPERSAND:38,CHAR_AT:64,CHAR_BACKWARD_SLASH:92,CHAR_CARRIAGE_RETURN:13,CHAR_CIRCUMFLEX_ACCENT:94,CHAR_COLON:58,CHAR_COMMA:44,CHAR_DOT:46,CHAR_DOUBLE_QUOTE:34,CHAR_EQUAL:61,CHAR_EXCLAMATION_MARK:33,CHAR_FORM_FEED:12,CHAR_FORWARD_SLASH:47,CHAR_GRAVE_ACCENT:96,CHAR_HASH:35,CHAR_HYPHEN_MINUS:45,CHAR_LEFT_ANGLE_BRACKET:60,CHAR_LEFT_CURLY_BRACE:123,CHAR_LEFT_SQUARE_BRACKET:91,CHAR_LINE_FEED:10,CHAR_NO_BREAK_SPACE:160,CHAR_PERCENT:37,CHAR_PLUS:43,CHAR_QUESTION_MARK:63,CHAR_RIGHT_ANGLE_BRACKET:62,CHAR_RIGHT_CURLY_BRACE:125,CHAR_RIGHT_SQUARE_BRACKET:93,CHAR_SEMICOLON:59,CHAR_SINGLE_QUOTE:39,CHAR_SPACE:32,CHAR_TAB:9,CHAR_UNDERSCORE:95,CHAR_VERTICAL_LINE:124,CHAR_ZERO_WIDTH_NOBREAK_SPACE:65279,SEP:u.sep,extglobChars(t){return{"!":{type:"negate",open:"(?:(?!(?:",close:`))${t.STAR})`},"?":{type:"qmark",open:"(?:",close:")?"},"+":{type:"plus",open:"(?:",close:")+"},"*":{type:"star",open:"(?:",close:")*"},"@":{type:"at",open:"(?:",close:")"}}},globChars(t){return t===true?C:x}}},222:function(t,e,n){"use strict";const u=n(753);const o=n(661);const{MAX_LENGTH:s,POSIX_REGEX_SOURCE:r,REGEX_NON_SPECIAL_CHARS:a,REGEX_SPECIAL_CHARS_BACKREF:i,REPLACEMENTS:c}=u;const expandRange=(t,e)=>{if(typeof e.expandRange==="function"){return e.expandRange(...t,e)}t.sort();const n=`[${t.join("-")}]`;try{new RegExp(n)}catch(e){return t.map((t=>o.escapeRegex(t))).join("..")}return n};const syntaxError=(t,e)=>`Missing ${t}: "${e}" - use "\\\\${e}" to match literal characters`;const parse=(t,e)=>{if(typeof t!=="string"){throw new TypeError("Expected a string")}t=c[t]||t;const n={...e};const p=typeof n.maxLength==="number"?Math.min(s,n.maxLength):s;let l=t.length;if(l>p){throw new SyntaxError(`Input length: ${l}, exceeds maximum allowed length: ${p}`)}const f={type:"bos",value:"",output:n.prepend||""};const A=[f];const _=n.capture?"":"?:";const R=o.isWindows(e);const h=u.globChars(R);const E=u.extglobChars(h);const{DOT_LITERAL:g,PLUS_LITERAL:y,SLASH_LITERAL:b,ONE_CHAR:x,DOTS_SLASH:C,NO_DOT:$,NO_DOT_SLASH:S,NO_DOTS_SLASH:d,QMARK:v,QMARK_NO_DOT:H,STAR:T,START_ANCHOR:L}=h;const globstar=t=>`(${_}(?:(?!${L}${t.dot?C:g}).)*?)`;const O=n.dot?"":$;const k=n.dot?v:H;let m=n.bash===true?globstar(n):T;if(n.capture){m=`(${m})`}if(typeof n.noext==="boolean"){n.noextglob=n.noext}const w={input:t,index:-1,start:0,dot:n.dot===true,consumed:"",output:"",prefix:"",backtrack:false,negated:false,brackets:0,braces:0,parens:0,quotes:0,globstar:false,tokens:A};t=o.removePrefix(t,w);l=t.length;const N=[];const I=[];const B=[];let G=f;let M;const eos=()=>w.index===l-1;const D=w.peek=(e=1)=>t[w.index+e];const P=w.advance=()=>t[++w.index]||"";const remaining=()=>t.slice(w.index+1);const consume=(t="",e=0)=>{w.consumed+=t;w.index+=e};const append=t=>{w.output+=t.output!=null?t.output:t.value;consume(t.value)};const negate=()=>{let t=1;while(D()==="!"&&(D(2)!=="("||D(3)==="?")){P();w.start++;t++}if(t%2===0){return false}w.negated=true;w.start++;return true};const increment=t=>{w[t]++;B.push(t)};const decrement=t=>{w[t]--;B.pop()};const push=t=>{if(G.type==="globstar"){const e=w.braces>0&&(t.type==="comma"||t.type==="brace");const n=t.extglob===true||N.length&&(t.type==="pipe"||t.type==="paren");if(t.type!=="slash"&&t.type!=="paren"&&!e&&!n){w.output=w.output.slice(0,-G.output.length);G.type="star";G.value="*";G.output=m;w.output+=G.output}}if(N.length&&t.type!=="paren"){N[N.length-1].inner+=t.value}if(t.value||t.output)append(t);if(G&&G.type==="text"&&t.type==="text"){G.value+=t.value;G.output=(G.output||"")+t.value;return}t.prev=G;A.push(t);G=t};const extglobOpen=(t,e)=>{const u={...E[e],conditions:1,inner:""};u.prev=G;u.parens=w.parens;u.output=w.output;const o=(n.capture?"(":"")+u.open;increment("parens");push({type:t,value:e,output:w.output?"":x});push({type:"paren",extglob:true,value:P(),output:o});N.push(u)};const extglobClose=t=>{let u=t.close+(n.capture?")":"");let o;if(t.type==="negate"){let s=m;if(t.inner&&t.inner.length>1&&t.inner.includes("/")){s=globstar(n)}if(s!==m||eos()||/^\)+$/.test(remaining())){u=t.close=`)$))${s}`}if(t.inner.includes("*")&&(o=remaining())&&/^\.[^\\/.]+$/.test(o)){const n=parse(o,{...e,fastpaths:false}).output;u=t.close=`)${n})${s})`}if(t.prev.type==="bos"){w.negatedExtglob=true}}push({type:"paren",extglob:true,value:M,output:u});decrement("parens")};if(n.fastpaths!==false&&!/(^[*!]|[/()[\]{}"])/.test(t)){let u=false;let s=t.replace(i,((t,e,n,o,s,r)=>{if(o==="\\"){u=true;return t}if(o==="?"){if(e){return e+o+(s?v.repeat(s.length):"")}if(r===0){return k+(s?v.repeat(s.length):"")}return v.repeat(n.length)}if(o==="."){return g.repeat(n.length)}if(o==="*"){if(e){return e+o+(s?m:"")}return m}return e?t:`\\${t}`}));if(u===true){if(n.unescape===true){s=s.replace(/\\/g,"")}else{s=s.replace(/\\+/g,(t=>t.length%2===0?"\\\\":t?"\\":""))}}if(s===t&&n.contains===true){w.output=t;return w}w.output=o.wrapOutput(s,w,e);return w}while(!eos()){M=P();if(M==="\0"){continue}if(M==="\\"){const t=D();if(t==="/"&&n.bash!==true){continue}if(t==="."||t===";"){continue}if(!t){M+="\\";push({type:"text",value:M});continue}const e=/^\\+/.exec(remaining());let u=0;if(e&&e[0].length>2){u=e[0].length;w.index+=u;if(u%2!==0){M+="\\"}}if(n.unescape===true){M=P()}else{M+=P()}if(w.brackets===0){push({type:"text",value:M});continue}}if(w.brackets>0&&(M!=="]"||G.value==="["||G.value==="[^")){if(n.posix!==false&&M===":"){const t=G.value.slice(1);if(t.includes("[")){G.posix=true;if(t.includes(":")){const t=G.value.lastIndexOf("[");const e=G.value.slice(0,t);const n=G.value.slice(t+2);const u=r[n];if(u){G.value=e+u;w.backtrack=true;P();if(!f.output&&A.indexOf(G)===1){f.output=x}continue}}}}if(M==="["&&D()!==":"||M==="-"&&D()==="]"){M=`\\${M}`}if(M==="]"&&(G.value==="["||G.value==="[^")){M=`\\${M}`}if(n.posix===true&&M==="!"&&G.value==="["){M="^"}G.value+=M;append({value:M});continue}if(w.quotes===1&&M!=='"'){M=o.escapeRegex(M);G.value+=M;append({value:M});continue}if(M==='"'){w.quotes=w.quotes===1?0:1;if(n.keepQuotes===true){push({type:"text",value:M})}continue}if(M==="("){increment("parens");push({type:"paren",value:M});continue}if(M===")"){if(w.parens===0&&n.strictBrackets===true){throw new SyntaxError(syntaxError("opening","("))}const t=N[N.length-1];if(t&&w.parens===t.parens+1){extglobClose(N.pop());continue}push({type:"paren",value:M,output:w.parens?")":"\\)"});decrement("parens");continue}if(M==="["){if(n.nobracket===true||!remaining().includes("]")){if(n.nobracket!==true&&n.strictBrackets===true){throw new SyntaxError(syntaxError("closing","]"))}M=`\\${M}`}else{increment("brackets")}push({type:"bracket",value:M});continue}if(M==="]"){if(n.nobracket===true||G&&G.type==="bracket"&&G.value.length===1){push({type:"text",value:M,output:`\\${M}`});continue}if(w.brackets===0){if(n.strictBrackets===true){throw new SyntaxError(syntaxError("opening","["))}push({type:"text",value:M,output:`\\${M}`});continue}decrement("brackets");const t=G.value.slice(1);if(G.posix!==true&&t[0]==="^"&&!t.includes("/")){M=`/${M}`}G.value+=M;append({value:M});if(n.literalBrackets===false||o.hasRegexChars(t)){continue}const e=o.escapeRegex(G.value);w.output=w.output.slice(0,-G.value.length);if(n.literalBrackets===true){w.output+=e;G.value=e;continue}G.value=`(${_}${e}|${G.value})`;w.output+=G.value;continue}if(M==="{"&&n.nobrace!==true){increment("braces");const t={type:"brace",value:M,output:"(",outputIndex:w.output.length,tokensIndex:w.tokens.length};I.push(t);push(t);continue}if(M==="}"){const t=I[I.length-1];if(n.nobrace===true||!t){push({type:"text",value:M,output:M});continue}let e=")";if(t.dots===true){const t=A.slice();const u=[];for(let e=t.length-1;e>=0;e--){A.pop();if(t[e].type==="brace"){break}if(t[e].type!=="dots"){u.unshift(t[e].value)}}e=expandRange(u,n);w.backtrack=true}if(t.comma!==true&&t.dots!==true){const n=w.output.slice(0,t.outputIndex);const u=w.tokens.slice(t.tokensIndex);t.value=t.output="\\{";M=e="\\}";w.output=n;for(const t of u){w.output+=t.output||t.value}}push({type:"brace",value:M,output:e});decrement("braces");I.pop();continue}if(M==="|"){if(N.length>0){N[N.length-1].conditions++}push({type:"text",value:M});continue}if(M===","){let t=M;const e=I[I.length-1];if(e&&B[B.length-1]==="braces"){e.comma=true;t="|"}push({type:"comma",value:M,output:t});continue}if(M==="/"){if(G.type==="dot"&&w.index===w.start+1){w.start=w.index+1;w.consumed="";w.output="";A.pop();G=f;continue}push({type:"slash",value:M,output:b});continue}if(M==="."){if(w.braces>0&&G.type==="dot"){if(G.value===".")G.output=g;const t=I[I.length-1];G.type="dots";G.output+=M;G.value+=M;t.dots=true;continue}if(w.braces+w.parens===0&&G.type!=="bos"&&G.type!=="slash"){push({type:"text",value:M,output:g});continue}push({type:"dot",value:M,output:g});continue}if(M==="?"){const t=G&&G.value==="(";if(!t&&n.noextglob!==true&&D()==="("&&D(2)!=="?"){extglobOpen("qmark",M);continue}if(G&&G.type==="paren"){const t=D();let e=M;if(t==="<"&&!o.supportsLookbehinds()){throw new Error("Node.js v10 or higher is required for regex lookbehinds")}if(G.value==="("&&!/[!=<:]/.test(t)||t==="<"&&!/<([!=]|\w+>)/.test(remaining())){e=`\\${M}`}push({type:"text",value:M,output:e});continue}if(n.dot!==true&&(G.type==="slash"||G.type==="bos")){push({type:"qmark",value:M,output:H});continue}push({type:"qmark",value:M,output:v});continue}if(M==="!"){if(n.noextglob!==true&&D()==="("){if(D(2)!=="?"||!/[!=<:]/.test(D(3))){extglobOpen("negate",M);continue}}if(n.nonegate!==true&&w.index===0){negate();continue}}if(M==="+"){if(n.noextglob!==true&&D()==="("&&D(2)!=="?"){extglobOpen("plus",M);continue}if(G&&G.value==="("||n.regex===false){push({type:"plus",value:M,output:y});continue}if(G&&(G.type==="bracket"||G.type==="paren"||G.type==="brace")||w.parens>0){push({type:"plus",value:M});continue}push({type:"plus",value:y});continue}if(M==="@"){if(n.noextglob!==true&&D()==="("&&D(2)!=="?"){push({type:"at",extglob:true,value:M,output:""});continue}push({type:"text",value:M});continue}if(M!=="*"){if(M==="$"||M==="^"){M=`\\${M}`}const t=a.exec(remaining());if(t){M+=t[0];w.index+=t[0].length}push({type:"text",value:M});continue}if(G&&(G.type==="globstar"||G.star===true)){G.type="star";G.star=true;G.value+=M;G.output=m;w.backtrack=true;w.globstar=true;consume(M);continue}let e=remaining();if(n.noextglob!==true&&/^\([^?]/.test(e)){extglobOpen("star",M);continue}if(G.type==="star"){if(n.noglobstar===true){consume(M);continue}const u=G.prev;const o=u.prev;const s=u.type==="slash"||u.type==="bos";const r=o&&(o.type==="star"||o.type==="globstar");if(n.bash===true&&(!s||e[0]&&e[0]!=="/")){push({type:"star",value:M,output:""});continue}const a=w.braces>0&&(u.type==="comma"||u.type==="brace");const i=N.length&&(u.type==="pipe"||u.type==="paren");if(!s&&u.type!=="paren"&&!a&&!i){push({type:"star",value:M,output:""});continue}while(e.slice(0,3)==="/**"){const n=t[w.index+4];if(n&&n!=="/"){break}e=e.slice(3);consume("/**",3)}if(u.type==="bos"&&eos()){G.type="globstar";G.value+=M;G.output=globstar(n);w.output=G.output;w.globstar=true;consume(M);continue}if(u.type==="slash"&&u.prev.type!=="bos"&&!r&&eos()){w.output=w.output.slice(0,-(u.output+G.output).length);u.output=`(?:${u.output}`;G.type="globstar";G.output=globstar(n)+(n.strictSlashes?")":"|$)");G.value+=M;w.globstar=true;w.output+=u.output+G.output;consume(M);continue}if(u.type==="slash"&&u.prev.type!=="bos"&&e[0]==="/"){const t=e[1]!==void 0?"|$":"";w.output=w.output.slice(0,-(u.output+G.output).length);u.output=`(?:${u.output}`;G.type="globstar";G.output=`${globstar(n)}${b}|${b}${t})`;G.value+=M;w.output+=u.output+G.output;w.globstar=true;consume(M+P());push({type:"slash",value:"/",output:""});continue}if(u.type==="bos"&&e[0]==="/"){G.type="globstar";G.value+=M;G.output=`(?:^|${b}|${globstar(n)}${b})`;w.output=G.output;w.globstar=true;consume(M+P());push({type:"slash",value:"/",output:""});continue}w.output=w.output.slice(0,-G.output.length);G.type="globstar";G.output=globstar(n);G.value+=M;w.output+=G.output;w.globstar=true;consume(M);continue}const u={type:"star",value:M,output:m};if(n.bash===true){u.output=".*?";if(G.type==="bos"||G.type==="slash"){u.output=O+u.output}push(u);continue}if(G&&(G.type==="bracket"||G.type==="paren")&&n.regex===true){u.output=M;push(u);continue}if(w.index===w.start||G.type==="slash"||G.type==="dot"){if(G.type==="dot"){w.output+=S;G.output+=S}else if(n.dot===true){w.output+=d;G.output+=d}else{w.output+=O;G.output+=O}if(D()!=="*"){w.output+=x;G.output+=x}}push(u)}while(w.brackets>0){if(n.strictBrackets===true)throw new SyntaxError(syntaxError("closing","]"));w.output=o.escapeLast(w.output,"[");decrement("brackets")}while(w.parens>0){if(n.strictBrackets===true)throw new SyntaxError(syntaxError("closing",")"));w.output=o.escapeLast(w.output,"(");decrement("parens")}while(w.braces>0){if(n.strictBrackets===true)throw new SyntaxError(syntaxError("closing","}"));w.output=o.escapeLast(w.output,"{");decrement("braces")}if(n.strictSlashes!==true&&(G.type==="star"||G.type==="bracket")){push({type:"maybe_slash",value:"",output:`${b}?`})}if(w.backtrack===true){w.output="";for(const t of w.tokens){w.output+=t.output!=null?t.output:t.value;if(t.suffix){w.output+=t.suffix}}}return w};parse.fastpaths=(t,e)=>{const n={...e};const r=typeof n.maxLength==="number"?Math.min(s,n.maxLength):s;const a=t.length;if(a>r){throw new SyntaxError(`Input length: ${a}, exceeds maximum allowed length: ${r}`)}t=c[t]||t;const i=o.isWindows(e);const{DOT_LITERAL:p,SLASH_LITERAL:l,ONE_CHAR:f,DOTS_SLASH:A,NO_DOT:_,NO_DOTS:R,NO_DOTS_SLASH:h,STAR:E,START_ANCHOR:g}=u.globChars(i);const y=n.dot?R:_;const b=n.dot?h:_;const x=n.capture?"":"?:";const C={negated:false,prefix:""};let $=n.bash===true?".*?":E;if(n.capture){$=`(${$})`}const globstar=t=>{if(t.noglobstar===true)return $;return`(${x}(?:(?!${g}${t.dot?A:p}).)*?)`};const create=t=>{switch(t){case"*":return`${y}${f}${$}`;case".*":return`${p}${f}${$}`;case"*.*":return`${y}${$}${p}${f}${$}`;case"*/*":return`${y}${$}${l}${f}${b}${$}`;case"**":return y+globstar(n);case"**/*":return`(?:${y}${globstar(n)}${l})?${b}${f}${$}`;case"**/*.*":return`(?:${y}${globstar(n)}${l})?${b}${$}${p}${f}${$}`;case"**/.*":return`(?:${y}${globstar(n)}${l})?${p}${f}${$}`;default:{const e=/^(.*?)\.(\w+)$/.exec(t);if(!e)return;const n=create(e[1]);if(!n)return;return n+p+e[2]}}};const S=o.removePrefix(t,C);let d=create(S);if(d&&n.strictSlashes!==true){d+=`${l}?`}return d};t.exports=parse},881:function(t,e,n){"use strict";const u=n(17);const o=n(800);const s=n(222);const r=n(661);const a=n(753);const isObject=t=>t&&typeof t==="object"&&!Array.isArray(t);const picomatch=(t,e,n=false)=>{if(Array.isArray(t)){const u=t.map((t=>picomatch(t,e,n)));const arrayMatcher=t=>{for(const e of u){const n=e(t);if(n)return n}return false};return arrayMatcher}const u=isObject(t)&&t.tokens&&t.input;if(t===""||typeof t!=="string"&&!u){throw new TypeError("Expected pattern to be a non-empty string")}const o=e||{};const s=r.isWindows(e);const a=u?picomatch.compileRe(t,e):picomatch.makeRe(t,e,false,true);const i=a.state;delete a.state;let isIgnored=()=>false;if(o.ignore){const t={...e,ignore:null,onMatch:null,onResult:null};isIgnored=picomatch(o.ignore,t,n)}const matcher=(n,u=false)=>{const{isMatch:r,match:c,output:p}=picomatch.test(n,a,e,{glob:t,posix:s});const l={glob:t,state:i,regex:a,posix:s,input:n,output:p,match:c,isMatch:r};if(typeof o.onResult==="function"){o.onResult(l)}if(r===false){l.isMatch=false;return u?l:false}if(isIgnored(n)){if(typeof o.onIgnore==="function"){o.onIgnore(l)}l.isMatch=false;return u?l:false}if(typeof o.onMatch==="function"){o.onMatch(l)}return u?l:true};if(n){matcher.state=i}return matcher};picomatch.test=(t,e,n,{glob:u,posix:o}={})=>{if(typeof t!=="string"){throw new TypeError("Expected input to be a string")}if(t===""){return{isMatch:false,output:""}}const s=n||{};const a=s.format||(o?r.toPosixSlashes:null);let i=t===u;let c=i&&a?a(t):t;if(i===false){c=a?a(t):t;i=c===u}if(i===false||s.capture===true){if(s.matchBase===true||s.basename===true){i=picomatch.matchBase(t,e,n,o)}else{i=e.exec(c)}}return{isMatch:Boolean(i),match:i,output:c}};picomatch.matchBase=(t,e,n,o=r.isWindows(n))=>{const s=e instanceof RegExp?e:picomatch.makeRe(e,n);return s.test(u.basename(t))};picomatch.isMatch=(t,e,n)=>picomatch(e,n)(t);picomatch.parse=(t,e)=>{if(Array.isArray(t))return t.map((t=>picomatch.parse(t,e)));return s(t,{...e,fastpaths:false})};picomatch.scan=(t,e)=>o(t,e);picomatch.compileRe=(t,e,n=false,u=false)=>{if(n===true){return t.output}const o=e||{};const s=o.contains?"":"^";const r=o.contains?"":"$";let a=`${s}(?:${t.output})${r}`;if(t&&t.negated===true){a=`^(?!${a}).*$`}const i=picomatch.toRegex(a,e);if(u===true){i.state=t}return i};picomatch.makeRe=(t,e={},n=false,u=false)=>{if(!t||typeof t!=="string"){throw new TypeError("Expected a non-empty string")}let o={negated:false,fastpaths:true};if(e.fastpaths!==false&&(t[0]==="."||t[0]==="*")){o.output=s.fastpaths(t,e)}if(!o.output){o=s(t,e)}return picomatch.compileRe(o,e,n,u)};picomatch.toRegex=(t,e)=>{try{const n=e||{};return new RegExp(t,n.flags||(n.nocase?"i":""))}catch(t){if(e&&e.debug===true)throw t;return/$^/}};picomatch.constants=a;t.exports=picomatch},800:function(t,e,n){"use strict";const u=n(661);const{CHAR_ASTERISK:o,CHAR_AT:s,CHAR_BACKWARD_SLASH:r,CHAR_COMMA:a,CHAR_DOT:i,CHAR_EXCLAMATION_MARK:c,CHAR_FORWARD_SLASH:p,CHAR_LEFT_CURLY_BRACE:l,CHAR_LEFT_PARENTHESES:f,CHAR_LEFT_SQUARE_BRACKET:A,CHAR_PLUS:_,CHAR_QUESTION_MARK:R,CHAR_RIGHT_CURLY_BRACE:h,CHAR_RIGHT_PARENTHESES:E,CHAR_RIGHT_SQUARE_BRACKET:g}=n(753);const isPathSeparator=t=>t===p||t===r;const depth=t=>{if(t.isPrefix!==true){t.depth=t.isGlobstar?Infinity:1}};const scan=(t,e)=>{const n=e||{};const y=t.length-1;const b=n.parts===true||n.scanToEnd===true;const x=[];const C=[];const $=[];let S=t;let d=-1;let v=0;let H=0;let T=false;let L=false;let O=false;let k=false;let m=false;let w=false;let N=false;let I=false;let B=false;let G=false;let M=0;let D;let P;let K={value:"",depth:0,isGlob:false};const eos=()=>d>=y;const peek=()=>S.charCodeAt(d+1);const advance=()=>{D=P;return S.charCodeAt(++d)};while(d<y){P=advance();let t;if(P===r){N=K.backslashes=true;P=advance();if(P===l){w=true}continue}if(w===true||P===l){M++;while(eos()!==true&&(P=advance())){if(P===r){N=K.backslashes=true;advance();continue}if(P===l){M++;continue}if(w!==true&&P===i&&(P=advance())===i){T=K.isBrace=true;O=K.isGlob=true;G=true;if(b===true){continue}break}if(w!==true&&P===a){T=K.isBrace=true;O=K.isGlob=true;G=true;if(b===true){continue}break}if(P===h){M--;if(M===0){w=false;T=K.isBrace=true;G=true;break}}}if(b===true){continue}break}if(P===p){x.push(d);C.push(K);K={value:"",depth:0,isGlob:false};if(G===true)continue;if(D===i&&d===v+1){v+=2;continue}H=d+1;continue}if(n.noext!==true){const t=P===_||P===s||P===o||P===R||P===c;if(t===true&&peek()===f){O=K.isGlob=true;k=K.isExtglob=true;G=true;if(P===c&&d===v){B=true}if(b===true){while(eos()!==true&&(P=advance())){if(P===r){N=K.backslashes=true;P=advance();continue}if(P===E){O=K.isGlob=true;G=true;break}}continue}break}}if(P===o){if(D===o)m=K.isGlobstar=true;O=K.isGlob=true;G=true;if(b===true){continue}break}if(P===R){O=K.isGlob=true;G=true;if(b===true){continue}break}if(P===A){while(eos()!==true&&(t=advance())){if(t===r){N=K.backslashes=true;advance();continue}if(t===g){L=K.isBracket=true;O=K.isGlob=true;G=true;break}}if(b===true){continue}break}if(n.nonegate!==true&&P===c&&d===v){I=K.negated=true;v++;continue}if(n.noparen!==true&&P===f){O=K.isGlob=true;if(b===true){while(eos()!==true&&(P=advance())){if(P===f){N=K.backslashes=true;P=advance();continue}if(P===E){G=true;break}}continue}break}if(O===true){G=true;if(b===true){continue}break}}if(n.noext===true){k=false;O=false}let U=S;let X="";let F="";if(v>0){X=S.slice(0,v);S=S.slice(v);H-=v}if(U&&O===true&&H>0){U=S.slice(0,H);F=S.slice(H)}else if(O===true){U="";F=S}else{U=S}if(U&&U!==""&&U!=="/"&&U!==S){if(isPathSeparator(U.charCodeAt(U.length-1))){U=U.slice(0,-1)}}if(n.unescape===true){if(F)F=u.removeBackslashes(F);if(U&&N===true){U=u.removeBackslashes(U)}}const Q={prefix:X,input:t,start:v,base:U,glob:F,isBrace:T,isBracket:L,isGlob:O,isExtglob:k,isGlobstar:m,negated:I,negatedExtglob:B};if(n.tokens===true){Q.maxDepth=0;if(!isPathSeparator(P)){C.push(K)}Q.tokens=C}if(n.parts===true||n.tokens===true){let e;for(let u=0;u<x.length;u++){const o=e?e+1:v;const s=x[u];const r=t.slice(o,s);if(n.tokens){if(u===0&&v!==0){C[u].isPrefix=true;C[u].value=X}else{C[u].value=r}depth(C[u]);Q.maxDepth+=C[u].depth}if(u!==0||r!==""){$.push(r)}e=s}if(e&&e+1<t.length){const u=t.slice(e+1);$.push(u);if(n.tokens){C[C.length-1].value=u;depth(C[C.length-1]);Q.maxDepth+=C[C.length-1].depth}}Q.slashes=x;Q.parts=$}return Q};t.exports=scan},661:function(t,e,n){"use strict";const u=n(17);const o=process.platform==="win32";const{REGEX_BACKSLASH:s,REGEX_REMOVE_BACKSLASH:r,REGEX_SPECIAL_CHARS:a,REGEX_SPECIAL_CHARS_GLOBAL:i}=n(753);e.isObject=t=>t!==null&&typeof t==="object"&&!Array.isArray(t);e.hasRegexChars=t=>a.test(t);e.isRegexChar=t=>t.length===1&&e.hasRegexChars(t);e.escapeRegex=t=>t.replace(i,"\\$1");e.toPosixSlashes=t=>t.replace(s,"/");e.removeBackslashes=t=>t.replace(r,(t=>t==="\\"?"":t));e.supportsLookbehinds=()=>{const t=process.version.slice(1).split(".").map(Number);if(t.length===3&&t[0]>=9||t[0]===8&&t[1]>=10){return true}return false};e.isWindows=t=>{if(t&&typeof t.windows==="boolean"){return t.windows}return o===true||u.sep==="\\"};e.escapeLast=(t,n,u)=>{const o=t.lastIndexOf(n,u);if(o===-1)return t;if(t[o-1]==="\\")return e.escapeLast(t,n,o-1);return`${t.slice(0,o)}\\${t.slice(o)}`};e.removePrefix=(t,e={})=>{let n=t;if(n.startsWith("./")){n=n.slice(2);e.prefix="./"}return n};e.wrapOutput=(t,e={},n={})=>{const u=n.contains?"":"^";const o=n.contains?"":"$";let s=`${u}(?:${t})${o}`;if(e.negated===true){s=`(?:^(?!${s}).*$)`}return s}},17:function(t){"use strict";t.exports=require("path")}};var e={};function __nccwpck_require__(n){var u=e[n];if(u!==undefined){return u.exports}var o=e[n]={exports:{}};var s=true;try{t[n](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete e[n]}return o.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var n=__nccwpck_require__(504);module.exports=n})();