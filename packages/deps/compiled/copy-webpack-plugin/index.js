(function(){var e={290:function(e,t,r){"use strict";const n=r(17);const{validate:i}=r(506);const o=r(455);const s=r(652);const a=r(400);const c=r(396);const{version:u}=r(358);const l=r(330);const{readFile:p,stat:f,throttleAll:d}=r(702);const g=/\[\\*([\w:]+)\\*\]/i;class CopyPlugin{constructor(e={patterns:[]}){i(l,e,{name:"Copy Plugin",baseDataPath:"options"});this.patterns=e.patterns;this.options=e.options||{}}static async createSnapshot(e,t,r){return new Promise(((n,i)=>{e.fileSystemInfo.createSnapshot(t,[r],undefined,undefined,null,((e,t)=>{if(e){i(e);return}n(t)}))}))}static async checkSnapshotValid(e,t){return new Promise(((r,n)=>{e.fileSystemInfo.checkSnapshotValid(t,((e,t)=>{if(e){n(e);return}r(t)}))}))}static getContentHash(e,t,r){const{outputOptions:n}=t;const{hashDigest:i,hashDigestLength:o,hashFunction:s,hashSalt:a}=n;const c=e.webpack.util.createHash(s);if(a){c.update(a)}c.update(r);const u=c.digest(i);return u.toString().slice(0,o)}static async runPattern(e,t,i,l,d,b,h){const{RawSource:m}=t.webpack.sources;const y={...b};const w=y.from;const _=n.normalize(w);l.log(`starting to process a pattern from '${_}' using '${y.context}' context`);let k;if(n.isAbsolute(_)){k=_}else{k=n.resolve(y.context,_)}l.debug(`getting stats for '${k}'...`);const{inputFileSystem:v}=t;let x;try{x=await f(v,k)}catch(e){}let $;if(x){if(x.isDirectory()){$="dir";l.debug(`determined '${k}' is a directory`)}else if(x.isFile()){$="file";l.debug(`determined '${k}' is a file`)}else{$="glob";l.debug(`determined '${k}' is unknown`)}}else{$="glob";l.debug(`determined '${k}' is a glob`)}const O={...{followSymbolicLinks:true},...y.globOptions||{},...{cwd:y.context,objectMode:true}};O.fs=v;let P;switch($){case"dir":i.contextDependencies.add(k);l.debug(`added '${k}' as a context dependency`);y.context=k;P=n.posix.join(c.escapePath(s(n.resolve(k))),"**/*");k=n.join(k,"**/*");if(typeof O.dot==="undefined"){O.dot=true}break;case"file":i.fileDependencies.add(k);l.debug(`added '${k}' as a file dependency`);y.context=n.dirname(k);P=c.escapePath(s(n.resolve(k)));if(typeof O.dot==="undefined"){O.dot=true}break;case"glob":default:{const e=n.normalize(a(k));i.contextDependencies.add(e);l.debug(`added '${e}' as a context dependency`);P=n.isAbsolute(w)?w:n.posix.join(c.escapePath(s(n.resolve(y.context))),w)}}l.log(`begin globbing '${P}'...`);let S;try{S=await e(P,O)}catch(e){i.errors.push(e);return}if(S.length===0){if(y.noErrorOnMissing){l.log(`finished to process a pattern from '${_}' using '${y.context}' context to '${y.to}'`);return}const e=new Error(`unable to locate '${P}' glob`);i.errors.push(e);return}let F;try{F=await Promise.all(S.map((async e=>{if(!e.dirent.isFile()){return}if(y.filter){let t;try{t=await y.filter(e.path)}catch(e){i.errors.push(e);return}if(!t){l.log(`skip '${e.path}', because it was filtered`);return}}const a=e.path;l.debug(`found '${a}'`);const c=n.resolve(y.context,a);const f=typeof y.to==="function"?await y.to({context:y.context,absoluteFilename:c}):n.normalize(typeof y.to!=="undefined"?y.to:"");const b=y.toType?y.toType:g.test(f)?"template":n.extname(f)===""||f.slice(-1)===n.sep?"dir":"file";l.log(`'to' option '${f}' determinated as '${b}'`);const w=n.relative(y.context,c);let _=b==="dir"?n.join(f,w):f;if(n.isAbsolute(_)){_=n.relative(t.options.output.path,_)}l.log(`determined that '${a}' should write to '${_}'`);const k=s(n.relative(t.context,c));if($==="dir"||$==="glob"){i.fileDependencies.add(c);l.debug(`added '${c}' as a file dependency`)}let x;l.debug(`getting cache for '${c}'...`);try{x=await d.getPromise(`${k}|${h}`,null)}catch(e){i.errors.push(e);return}let O;if(x){l.debug(`found cache for '${c}'...`);let e;l.debug(`checking snapshot on valid for '${c}'...`);try{e=await CopyPlugin.checkSnapshotValid(i,x.snapshot)}catch(e){i.errors.push(e);return}if(e){l.debug(`snapshot for '${c}' is valid`);({source:O}=x)}else{l.debug(`snapshot for '${c}' is invalid`)}}else{l.debug(`missed cache for '${c}'`)}if(!O){const e=Date.now();l.debug(`reading '${c}'...`);let t;try{t=await p(v,c)}catch(e){i.errors.push(e);return}l.debug(`read '${c}'`);O=new m(t);let r;l.debug(`creating snapshot for '${c}'...`);try{r=await CopyPlugin.createSnapshot(i,e,c)}catch(e){i.errors.push(e);return}if(r){l.debug(`created snapshot for '${c}'`);l.debug(`storing cache for '${c}'...`);try{await d.storePromise(`${k}|${h}`,null,{source:O,snapshot:r})}catch(e){i.errors.push(e);return}l.debug(`stored cache for '${c}'`)}}if(y.transform){const e=typeof y.transform==="function"?{transformer:y.transform}:y.transform;if(e.transformer){l.log(`transforming content for '${c}'...`);const n=O.buffer();if(e.cache){const i=t.webpack&&t.webpack.util&&t.webpack.util.createHash?t.webpack.util.createHash("xxhash64"):r(113).createHash("md4");const s={version:u,sourceFilename:k,transform:e.transformer,contentHash:i.update(n).digest("hex"),index:h};const a=`transform|${o(typeof e.cache==="boolean"?s:typeof e.cache.keys==="function"?await e.cache.keys(s,c):{...s,...e.cache.keys})}`;l.debug(`getting transformation cache for '${c}'...`);const p=d.getItemCache(a,d.getLazyHashedEtag(O));O=await p.getPromise();l.debug(O?`found transformation cache for '${c}'`:`no transformation cache for '${c}'`);if(!O){const t=await e.transformer(n,c);O=new m(t);l.debug(`caching transformation for '${c}'...`);await p.storePromise(O);l.debug(`cached transformation for '${c}'`)}}else{O=new m(await e.transformer(n,c))}}}let P=typeof y.info==="undefined"?{}:typeof y.info==="function"?y.info({absoluteFilename:c,sourceFilename:k,filename:_,toType:b})||{}:y.info||{};if(b==="template"){l.log(`interpolating template '${_}' for '${k}'...`);const e=CopyPlugin.getContentHash(t,i,O.buffer());const r=n.extname(k);const o=n.basename(k);const a=o.slice(0,o.length-r.length);const u={filename:s(n.relative(y.context,c)),contentHash:e,chunk:{name:a,id:k,hash:e}};const{path:p,info:f}=i.getPathWithInfo(s(_),u);P={...P,...f};_=p;l.log(`interpolated template '${_}' for '${k}'`)}else{_=s(_)}return{sourceFilename:k,absoluteFilename:c,filename:_,source:O,info:P,force:y.force}})))}catch(e){i.errors.push(e);return}if(F.length===0){if(y.noErrorOnMissing){l.log(`finished to process a pattern from '${_}' using '${y.context}' context to '${y.to}'`);return}const e=new Error(`unable to locate '${P}' glob after filtering paths`);i.errors.push(e);return}l.log(`finished to process a pattern from '${_}' using '${y.context}' context`);return F}apply(e){const t=this.constructor.name;e.hooks.thisCompilation.tap(t,(i=>{const a=i.getLogger("copy-webpack-plugin");const c=i.getCache("CopyWebpackPlugin");let l;i.hooks.processAssets.tapAsync({name:"copy-webpack-plugin",stage:e.webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONAL},(async(t,p)=>{if(typeof l==="undefined"){try{({globby:l}=await r.e(189).then(r.bind(r,189)))}catch(e){p(e);return}}a.log("starting to add additional assets...");const f=new Map;const b=[];this.patterns.map(((t,r)=>b.push((async()=>{const p=typeof t==="string"?{from:t}:{...t};const d=typeof p.context==="undefined"?e.context:n.isAbsolute(p.context)?p.context:n.join(e.context,p.context);p.context=d;let b;try{b=await CopyPlugin.runPattern(l,e,i,a,c,p,r)}catch(e){i.errors.push(e);return}if(!b){return}let h=b.filter((e=>Boolean(e)));if(typeof p.transformAll!=="undefined"){if(typeof p.to==="undefined"){i.errors.push(new Error(`Invalid "pattern.to" for the "pattern.from": "${p.from}" and "pattern.transformAll" function. The "to" option must be specified.`));return}h.sort(((e,t)=>e.absoluteFilename>t.absoluteFilename?1:e.absoluteFilename<t.absoluteFilename?-1:0));const t=h.length===1?c.getLazyHashedEtag(h[0].source):h.reduce(((e,t,r)=>{e=c.mergeEtags(r===1?c.getLazyHashedEtag(e.source):e,c.getLazyHashedEtag(t.source));return e}));const r=c.getItemCache(`transformAll|${o({version:u,from:p.from,to:p.to,transformAll:p.transformAll})}`,t);let n=await r.getPromise();if(!n){n={filename:p.to};try{n.data=await p.transformAll(h.map((e=>({data:e.source.buffer(),sourceFilename:e.sourceFilename,absoluteFilename:e.absoluteFilename}))))}catch(e){i.errors.push(e);return}const t=typeof p.to==="function"?await p.to({context:d}):p.to;if(g.test(t)){const r=CopyPlugin.getContentHash(e,i,n.data);const{path:o,info:a}=i.getPathWithInfo(s(t),{contentHash:r,chunk:{id:"unknown-copied-asset",hash:r}});n.filename=o;n.info=a}const{RawSource:o}=e.webpack.sources;n.source=new o(n.data);n.force=p.force;await r.storePromise(n)}h=[n]}const m=p.priority||0;if(!f.has(m)){f.set(m,[])}f.get(m).push(...h)}))));await d(this.options.concurrency||100,b);const h=[...f.entries()].sort(((e,t)=>e[0]-t[0]));h.reduce(((e,t)=>e.concat(t[1])),[]).filter(Boolean).forEach((e=>{const{absoluteFilename:t,sourceFilename:r,filename:n,source:o,force:s}=e;const c=i.getAsset(n);if(c){if(s){const s={copied:true,sourceFilename:r};a.log(`force updating '${n}' from '${t}' to compilation assets, because it already exists...`);i.updateAsset(n,o,{...s,...e.info});a.log(`force updated '${n}' from '${t}' to compilation assets, because it already exists`);return}a.log(`skip adding '${n}' from '${t}' to compilation assets, because it already exists`);return}const u={copied:true,sourceFilename:r};a.log(`writing '${n}' from '${t}' to compilation assets...`);i.emitAsset(n,o,{...u,...e.info});a.log(`written '${n}' from '${t}' to compilation assets`)}));a.log("finished to adding additional assets");p()}));if(i.hooks.statsPrinter){i.hooks.statsPrinter.tap(t,(e=>{e.hooks.print.for("asset.info.copied").tap("copy-webpack-plugin",((e,{green:t,formatFlag:r})=>e?t(r("copied")):""))}))}}))}}e.exports=CopyPlugin},702:function(e){"use strict";function stat(e,t){return new Promise(((r,n)=>{e.stat(t,((e,t)=>{if(e){n(e);return}r(t)}))}))}function readFile(e,t){return new Promise(((r,n)=>{e.readFile(t,((e,t)=>{if(e){n(e);return}r(t)}))}))}const t=Symbol(`not-settled`);function throttleAll(e,r){if(!Number.isInteger(e)||e<1){throw new TypeError(`Expected \`limit\` to be a finite number > 0, got \`${e}\` (${typeof e})`)}if(!Array.isArray(r)||!r.every((e=>typeof e===`function`))){throw new TypeError(`Expected \`tasks\` to be a list of functions returning a promise`)}return new Promise(((n,i)=>{const o=Array(r.length).fill(t);const s=r.entries();const next=()=>{const{done:e,value:r}=s.next();if(e){const e=!o.includes(t);if(e){n(o)}return}const[a,c]=r;const onFulfilled=e=>{o[a]=e;next()};c().then(onFulfilled,i)};Array(e).fill(0).forEach(next)}))}e.exports={stat:stat,readFile:readFile,throttleAll:throttleAll}},400:function(e,t,r){"use strict";var n=r(979);var i=r(17).posix.dirname;var o=r(37).platform()==="win32";var s="/";var a=/\\/g;var c=/\\([!*?|[\](){}])/g;e.exports=function globParent(e,t){var r=Object.assign({flipBackslashes:true},t);if(r.flipBackslashes&&o&&e.indexOf(s)<0){e=e.replace(a,s)}if(isEnclosure(e)){e+=s}e+="a";do{e=i(e)}while(isGlobby(e));return e.replace(c,"$1")};function isEnclosure(e){var t=e.slice(-1);var r;switch(t){case"}":r="{";break;case"]":r="[";break;default:return false}var n=e.indexOf(r);if(n<0){return false}return e.slice(n+1,-1).includes(s)}function isGlobby(e){if(/\([^()]+$/.test(e)){return true}if(e[0]==="{"||e[0]==="["){return true}if(/[^\\][{[]/.test(e)){return true}return n(e)}},425:function(e){
/*!
 * is-extglob <https://github.com/jonschlinkert/is-extglob>
 *
 * Copyright (c) 2014-2016, Jon Schlinkert.
 * Licensed under the MIT License.
 */
e.exports=function isExtglob(e){if(typeof e!=="string"||e===""){return false}var t;while(t=/(\\).|([@?!+*]\(.*\))/g.exec(e)){if(t[2])return true;e=e.slice(t.index+t[0].length)}return false}},979:function(e,t,r){
/*!
 * is-glob <https://github.com/jonschlinkert/is-glob>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
var n=r(425);var i={"{":"}","(":")","[":"]"};var strictCheck=function(e){if(e[0]==="!"){return true}var t=0;var r=-2;var n=-2;var o=-2;var s=-2;var a=-2;while(t<e.length){if(e[t]==="*"){return true}if(e[t+1]==="?"&&/[\].+)]/.test(e[t])){return true}if(n!==-1&&e[t]==="["&&e[t+1]!=="]"){if(n<t){n=e.indexOf("]",t)}if(n>t){if(a===-1||a>n){return true}a=e.indexOf("\\",t);if(a===-1||a>n){return true}}}if(o!==-1&&e[t]==="{"&&e[t+1]!=="}"){o=e.indexOf("}",t);if(o>t){a=e.indexOf("\\",t);if(a===-1||a>o){return true}}}if(s!==-1&&e[t]==="("&&e[t+1]==="?"&&/[:!=]/.test(e[t+2])&&e[t+3]!==")"){s=e.indexOf(")",t);if(s>t){a=e.indexOf("\\",t);if(a===-1||a>s){return true}}}if(r!==-1&&e[t]==="("&&e[t+1]!=="|"){if(r<t){r=e.indexOf("|",t)}if(r!==-1&&e[r+1]!==")"){s=e.indexOf(")",r);if(s>r){a=e.indexOf("\\",r);if(a===-1||a>s){return true}}}}if(e[t]==="\\"){var c=e[t+1];t+=2;var u=i[c];if(u){var l=e.indexOf(u,t);if(l!==-1){t=l+1}}if(e[t]==="!"){return true}}else{t++}}return false};var relaxedCheck=function(e){if(e[0]==="!"){return true}var t=0;while(t<e.length){if(/[*?{}()[\]]/.test(e[t])){return true}if(e[t]==="\\"){var r=e[t+1];t+=2;var n=i[r];if(n){var o=e.indexOf(n,t);if(o!==-1){t=o+1}}if(e[t]==="!"){return true}}else{t++}}return false};e.exports=function isGlob(e,t){if(typeof e!=="string"||e===""){return false}if(n(e)){return true}var r=strictCheck;if(t&&t.strict===false){r=relaxedCheck}return r(e)}},652:function(e){
/*!
 * normalize-path <https://github.com/jonschlinkert/normalize-path>
 *
 * Copyright (c) 2014-2018, Jon Schlinkert.
 * Released under the MIT License.
 */
e.exports=function(e,t){if(typeof e!=="string"){throw new TypeError("expected path to be a string")}if(e==="\\"||e==="/")return"/";var r=e.length;if(r<=1)return e;var n="";if(r>4&&e[3]==="\\"){var i=e[2];if((i==="?"||i===".")&&e.slice(0,2)==="\\\\"){e=e.slice(2);n="//"}}var o=e.split(/[/\\]+/);if(t!==false&&o[o.length-1]===""){o.pop()}return n+o.join("/")}},995:function(e,t,r){e.exports=r(113).randomBytes},455:function(e,t,r){"use strict";var n=r(995);var i=16;var o=generateUID();var s=new RegExp('(\\\\)?"@__(F|R|D|M|S|A|U|I|B|L)-'+o+'-(\\d+)__@"',"g");var a=/\{\s*\[native code\]\s*\}/g;var c=/function.*?\(/;var u=/.*?=>.*?/;var l=/[<>\/\u2028\u2029]/g;var p=["*","async"];var f={"<":"\\u003C",">":"\\u003E","/":"\\u002F","\u2028":"\\u2028","\u2029":"\\u2029"};function escapeUnsafeChars(e){return f[e]}function generateUID(){var e=n(i);var t="";for(var r=0;r<i;++r){t+=e[r].toString(16)}return t}function deleteFunctions(e){var t=[];for(var r in e){if(typeof e[r]==="function"){t.push(r)}}for(var n=0;n<t.length;n++){delete e[t[n]]}}e.exports=function serialize(e,t){t||(t={});if(typeof t==="number"||typeof t==="string"){t={space:t}}var r=[];var n=[];var i=[];var f=[];var d=[];var g=[];var b=[];var h=[];var m=[];var y=[];function replacer(e,s){if(t.ignoreFunction){deleteFunctions(s)}if(!s&&s!==undefined){return s}var a=this[e];var c=typeof a;if(c==="object"){if(a instanceof RegExp){return"@__R-"+o+"-"+(n.push(a)-1)+"__@"}if(a instanceof Date){return"@__D-"+o+"-"+(i.push(a)-1)+"__@"}if(a instanceof Map){return"@__M-"+o+"-"+(f.push(a)-1)+"__@"}if(a instanceof Set){return"@__S-"+o+"-"+(d.push(a)-1)+"__@"}if(a instanceof Array){var u=a.filter((function(){return true})).length!==a.length;if(u){return"@__A-"+o+"-"+(g.push(a)-1)+"__@"}}if(a instanceof URL){return"@__L-"+o+"-"+(y.push(a)-1)+"__@"}}if(c==="function"){return"@__F-"+o+"-"+(r.push(a)-1)+"__@"}if(c==="undefined"){return"@__U-"+o+"-"+(b.push(a)-1)+"__@"}if(c==="number"&&!isNaN(a)&&!isFinite(a)){return"@__I-"+o+"-"+(h.push(a)-1)+"__@"}if(c==="bigint"){return"@__B-"+o+"-"+(m.push(a)-1)+"__@"}return s}function serializeFunc(e){var t=e.toString();if(a.test(t)){throw new TypeError("Serializing native function: "+e.name)}if(c.test(t)){return t}if(u.test(t)){return t}var r=t.indexOf("(");var n=t.substr(0,r).trim().split(" ").filter((function(e){return e.length>0}));var i=n.filter((function(e){return p.indexOf(e)===-1}));if(i.length>0){return(n.indexOf("async")>-1?"async ":"")+"function"+(n.join("").indexOf("*")>-1?"*":"")+t.substr(r)}return t}if(t.ignoreFunction&&typeof e==="function"){e=undefined}if(e===undefined){return String(e)}var w;if(t.isJSON&&!t.space){w=JSON.stringify(e)}else{w=JSON.stringify(e,t.isJSON?null:replacer,t.space)}if(typeof w!=="string"){return String(w)}if(t.unsafe!==true){w=w.replace(l,escapeUnsafeChars)}if(r.length===0&&n.length===0&&i.length===0&&f.length===0&&d.length===0&&g.length===0&&b.length===0&&h.length===0&&m.length===0&&y.length===0){return w}return w.replace(s,(function(e,o,s,a){if(o){return e}if(s==="D"){return'new Date("'+i[a].toISOString()+'")'}if(s==="R"){return"new RegExp("+serialize(n[a].source)+', "'+n[a].flags+'")'}if(s==="M"){return"new Map("+serialize(Array.from(f[a].entries()),t)+")"}if(s==="S"){return"new Set("+serialize(Array.from(d[a].values()),t)+")"}if(s==="A"){return"Array.prototype.slice.call("+serialize(Object.assign({length:g[a].length},g[a]),t)+")"}if(s==="U"){return"undefined"}if(s==="I"){return h[a]}if(s==="B"){return'BigInt("'+m[a]+'")'}if(s==="L"){return'new URL("'+y[a].toString()+'")'}var c=r[a];return serializeFunc(c)}))}},396:function(e){"use strict";e.exports=require("@fe6/biu-deps/compiled/fast-glob")},506:function(e){"use strict";e.exports=require("@fe6/biu-deps/compiled/schema-utils")},113:function(e){"use strict";e.exports=require("crypto")},147:function(e){"use strict";e.exports=require("fs")},561:function(e){"use strict";e.exports=require("node:fs")},411:function(e){"use strict";e.exports=require("node:path")},742:function(e){"use strict";e.exports=require("node:process")},492:function(e){"use strict";e.exports=require("node:stream")},41:function(e){"use strict";e.exports=require("node:url")},37:function(e){"use strict";e.exports=require("os")},17:function(e){"use strict";e.exports=require("path")},781:function(e){"use strict";e.exports=require("stream")},837:function(e){"use strict";e.exports=require("util")},330:function(e){"use strict";e.exports=JSON.parse('{"definitions":{"ObjectPattern":{"type":"object","additionalProperties":false,"properties":{"from":{"type":"string","description":"Glob or path from where we copy files.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#from","minLength":1},"to":{"anyOf":[{"type":"string"},{"instanceof":"Function"}],"description":"Output path.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#to"},"context":{"type":"string","description":"A path that determines how to interpret the \'from\' path.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#context"},"globOptions":{"type":"object","description":"Allows to configute the glob pattern matching library used by the plugin.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#globoptions"},"filter":{"instanceof":"Function","description":"Allows to filter copied assets.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#filter"},"transformAll":{"instanceof":"Function","description":"Allows you to modify the contents of multiple files and save the result to one file.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#transformall"},"toType":{"enum":["dir","file","template"],"description":"Determinate what is to option - directory, file or template.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#totype"},"force":{"type":"boolean","description":"Overwrites files already in \'compilation.assets\' (usually added by other plugins/loaders).","link":"https://github.com/webpack-contrib/copy-webpack-plugin#force"},"priority":{"type":"number","description":"Allows to specify the priority of copying files with the same destination name.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#priority"},"info":{"anyOf":[{"type":"object"},{"instanceof":"Function"}],"description":"Allows to add assets info.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#info"},"transform":{"description":"Allows to modify the file contents.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#transform","anyOf":[{"instanceof":"Function"},{"type":"object","additionalProperties":false,"properties":{"transformer":{"instanceof":"Function","description":"Allows to modify the file contents.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#transformer"},"cache":{"description":"Enables/disables and configure caching.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#cache","anyOf":[{"type":"boolean"},{"type":"object","additionalProperties":false,"properties":{"keys":{"anyOf":[{"type":"object","additionalProperties":true},{"instanceof":"Function"}]}}}]}}}]},"noErrorOnMissing":{"type":"boolean","description":"Doesn\'t generate an error on missing file(s).","link":"https://github.com/webpack-contrib/copy-webpack-plugin#noerroronmissing"}},"required":["from"]},"StringPattern":{"type":"string","minLength":1}},"type":"object","additionalProperties":false,"properties":{"patterns":{"type":"array","minItems":1,"items":{"anyOf":[{"$ref":"#/definitions/StringPattern"},{"$ref":"#/definitions/ObjectPattern"}]}},"options":{"type":"object","additionalProperties":false,"properties":{"concurrency":{"type":"number","description":"Limits the number of simultaneous requests to fs.","link":"https://github.com/webpack-contrib/copy-webpack-plugin#concurrency"}}}},"required":["patterns"]}')},358:function(e){"use strict";e.exports=JSON.parse('{"name":"copy-webpack-plugin","version":"10.2.4","description":"Copy files && directories with webpack","license":"MIT","repository":"webpack-contrib/copy-webpack-plugin","author":"Len Boyette","homepage":"https://github.com/webpack-contrib/copy-webpack-plugin","bugs":"https://github.com/webpack-contrib/copy-webpack-plugin/issues","funding":{"type":"opencollective","url":"https://opencollective.com/webpack"},"main":"dist/index.js","types":"types/index.d.ts","engines":{"node":">= 12.20.0"},"scripts":{"start":"npm run build -- -w","clean":"del-cli dist types","prebuild":"npm run clean","build:types":"tsc --declaration --emitDeclarationOnly --outDir types --rootDir src && prettier \\"types/**/*.ts\\" --write","build:code":"cross-env NODE_ENV=production babel src -d dist --copy-files","build":"npm-run-all -p \\"build:**\\"","commitlint":"commitlint --from=master","security":"npm audit --production","lint:prettier":"prettier --list-different .","lint:js":"eslint --cache .","lint:types":"tsc --pretty --noEmit","lint":"npm-run-all -l -p \\"lint:**\\"","test:only":"cross-env NODE_ENV=test jest","test:watch":"npm run test:only -- --watch","test:coverage":"npm run test:only -- --collectCoverageFrom=\\"src/**/*.js\\" --coverage","pretest":"npm run lint","test":"npm run test:coverage","prepare":"husky install && npm run build","release":"standard-version"},"files":["dist","types"],"peerDependencies":{"webpack":"^5.1.0"},"dependencies":{"fast-glob":"^3.2.7","glob-parent":"^6.0.1","globby":"^12.0.2","normalize-path":"^3.0.0","schema-utils":"^4.0.0","serialize-javascript":"^6.0.0"},"devDependencies":{"@babel/cli":"^7.16.7","@babel/core":"^7.16.7","@babel/eslint-parser":"^7.16.5","@babel/preset-env":"^7.16.7","@commitlint/cli":"^15.0.0","@commitlint/config-conventional":"^15.0.0","@types/glob-parent":"^5.1.1","@types/normalize-path":"^3.0.0","@types/serialize-javascript":"^5.0.2","@webpack-contrib/eslint-config-webpack":"^3.0.0","babel-jest":"^27.4.5","cross-env":"^7.0.3","del":"^6.0.0","del-cli":"^4.0.1","eslint":"^8.6.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.25.4","file-loader":"^6.2.0","husky":"^7.0.1","is-gzip":"^2.0.0","jest":"^27.4.5","lint-staged":"^12.1.5","memfs":"^3.4.1","mkdirp":"^1.0.4","npm-run-all":"^4.1.5","prettier":"^2.3.2","standard-version":"^9.3.1","typescript":"^4.5.4","webpack":"^5.64.1"},"keywords":["webpack","plugin","transfer","move","copy"]}')}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}__nccwpck_require__.m=e;!function(){__nccwpck_require__.d=function(e,t){for(var r in t){if(__nccwpck_require__.o(t,r)&&!__nccwpck_require__.o(e,r)){Object.defineProperty(e,r,{enumerable:true,get:t[r]})}}}}();!function(){__nccwpck_require__.f={};__nccwpck_require__.e=function(e){return Promise.all(Object.keys(__nccwpck_require__.f).reduce((function(t,r){__nccwpck_require__.f[r](e,t);return t}),[]))}}();!function(){__nccwpck_require__.u=function(e){return""+e+".index.js"}}();!function(){__nccwpck_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}();!function(){__nccwpck_require__.r=function(e){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})}}();if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";!function(){var e={179:1};var installChunk=function(t){var r=t.modules,n=t.ids,i=t.runtime;for(var o in r){if(__nccwpck_require__.o(r,o)){__nccwpck_require__.m[o]=r[o]}}if(i)i(__nccwpck_require__);for(var s=0;s<n.length;s++)e[n[s]]=1};__nccwpck_require__.f.require=function(t,r){if(!e[t]){if(true){installChunk(require("./"+__nccwpck_require__.u(t)))}else e[t]=1}}}();var r=__nccwpck_require__(290);module.exports=r})();